2025-06-16 05:02:23,964(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando a própria lista de telefones.
2025-06-16 05:02:24,294(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando o próprio e-mail.
2025-06-16 05:02:24,669(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com buscando suas próprias informações de cliente.
2025-06-16 05:02:24,711(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando a própria lista de endereços.
2025-06-16 05:02:25,124(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando o próprio CPF.
2025-06-16 05:02:25,496(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando a própria data de nascimento.
2025-06-16 05:02:26,087(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando a própria senha.
2025-06-16 05:02:26,454(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando o telefone específico de ID 1.
2025-06-16 05:02:27,224(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando o próprio nome.
2025-06-16 05:02:27,289(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin executando findAll de clientes.
2025-06-16 05:02:27,315(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin buscando cliente por nome: Test
2025-06-16 05:02:27,399(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin buscando cliente por ID: 1
2025-06-16 05:02:27,498(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin gerando cliente a partir do funcionário com e-mail: funcionario@email.com
2025-06-16 05:02:27,519(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin deletando cliente com ID: 1
2025-06-16 05:02:27,906(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Recebida nova solicitação de cadastro de cliente.
2025-06-16 05:02:29,072(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Usuário user@example.com solicitou a atualização do endereço com ID 1.
2025-06-16 05:02:29,458(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Buscando todos os endereços para o usuário: user@example.com
2025-06-16 05:02:29,487(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Buscando endereço com ID 1 para o usuário: user@example.com
2025-06-16 05:02:29,506(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Usuário user@example.com solicitou a exclusão do endereço com ID 1.
2025-06-16 05:02:29,523(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Usuário user@example.com solicitou a criação de um novo endereço.
2025-06-16 05:02:29,525(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Endereço com ID 1 criado com sucesso para o usuário: user@example.com
2025-06-16 05:02:30,301(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para listar todos os estados.
2025-06-16 05:02:30,310(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para buscar estado por sigla: TO
2025-06-16 05:02:30,317(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para criar novo estado: Tocantins
2025-06-16 05:02:30,329(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Estado criado com sucesso, id: 0
2025-06-16 05:02:30,339(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para deletar estado de id: 1
2025-06-16 05:02:30,339(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Estado deletado com sucesso.
2025-06-16 05:02:30,346(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para atualizar estado de id: 1
2025-06-16 05:02:30,347(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Estado atualizado com sucesso.
2025-06-16 05:02:31,214(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin employee@example.com atualizando o próprio salário.
2025-06-16 05:02:31,235(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando o próprio CPF.
2025-06-16 05:02:31,270(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando o próprio e-mail.
2025-06-16 05:02:31,341(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando a própria senha.
2025-06-16 05:02:31,380(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando a própria lista de endereços.
2025-06-16 05:02:31,396(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando o próprio nome.
2025-06-16 05:02:31,426(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando o telefone específico de ID 1.
2025-06-16 05:02:31,449(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando a própria data de nascimento.
2025-06-16 05:02:31,473(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando a própria lista de telefones.
2025-06-16 05:02:32,552(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin criando novo funcionário.
2025-06-16 05:02:32,624(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin deletando funcionário com ID: 1
2025-06-16 05:02:32,724(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin buscando funcionários por cargo: Vendedor
2025-06-16 05:02:32,746(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin buscando funcionário por e-mail: teste@email.com
2025-06-16 05:02:32,761(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin buscando funcionário por ID: 1
2025-06-16 05:02:32,785(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin acessando lista de todos os funcionários.
2025-06-16 05:02:33,587(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin atualizando funcionário com ID: 1
2025-06-16 05:02:33,603(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin buscando funcionário por nome: Teste
2025-06-16 05:02:35,593(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando cor do óculos com ID: 1
2025-06-16 05:02:35,937(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando preço do óculos com ID: 1
2025-06-16 05:02:36,226(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando estoque do óculos com ID: 1
2025-06-16 05:02:36,479(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando nome do óculos com ID: 1
2025-06-16 05:02:36,700(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando modelo do óculos com ID: 1
2025-06-16 05:02:37,237(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Criando novo óculos: null
2025-06-16 05:02:37,247(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Deletando óculos com ID: 1
2025-06-16 05:02:37,279(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando óculos com ID: 1
2025-06-16 05:02:37,306(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Buscando todos os óculos.
2025-06-16 05:02:37,335(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Buscando óculos por ID: 1
2025-06-16 05:02:37,404(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Realizando busca de óculos por filtro.
2025-06-16 05:02:37,407(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Realizando busca de óculos por filtro.
2025-06-16 05:02:37,938(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com criando novo pedido.
2025-06-16 05:02:37,941(dd-MM-yyyy HH:mm:ss) WARN  [io.gi.Jo.re.PedidoResource] (Test runner thread)Erro de validação ao criar pedido para user@example.com: Dados inválidos.
2025-06-16 05:02:37,972(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com criando novo pedido.
2025-06-16 05:02:38,074(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com criando novo pedido.
2025-06-16 05:02:38,088(dd-MM-yyyy HH:mm:ss) ERROR [io.gi.Jo.re.PedidoResource] (Test runner thread)Erro inesperado ao criar pedido para user@example.com.: java.lang.RuntimeException: Erro interno.
	at io.github.JoasFyllipe.resource.PedidoResource.create(PedidoResource.java:58)
	at io.github.JoasFyllipe.PedidoResourceTest$CreatePedidoTests.testCreatePedidoUnexpectedError(PedidoResourceTest.java:166)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)
	at io.quarkus.deployment.dev.testing.JunitTestRunner$2.run(JunitTestRunner.java:227)
	at io.quarkus.deployment.dev.testing.ModuleTestRunner$2.run(ModuleTestRunner.java:89)
	at io.quarkus.deployment.dev.testing.TestSupport.runInternal(TestSupport.java:466)
	at io.quarkus.deployment.dev.testing.TestSupport$3.run(TestSupport.java:386)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-06-16 05:02:38,204(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com criando novo pedido.
2025-06-16 05:02:38,207(dd-MM-yyyy HH:mm:ss) WARN  [io.gi.Jo.re.PedidoResource] (Test runner thread)Erro ao criar pedido para user@example.com: Cliente não encontrado.
2025-06-16 05:02:38,258(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com solicitando cancelamento do pedido ID 1.
2025-06-16 05:02:38,301(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com buscando sua compra de ID 99.
2025-06-16 05:02:38,307(dd-MM-yyyy HH:mm:ss) WARN  [io.gi.Jo.re.PedidoResource] (Test runner thread)Compra de ID 99 não encontrada para o usuário user@example.com.
2025-06-16 05:02:38,337(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com buscando sua compra de ID 1.
2025-06-16 05:02:38,364(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com gerando boleto para o pedido ID 1.
2025-06-16 05:02:38,504(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com buscando seu histórico de compras.
2025-06-16 05:02:38,543(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com gerando código PIX para o pedido ID 1.
2025-06-16 05:02:38,563(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com solicitando cancelamento do pedido ID 1.
2025-06-16 05:02:38,570(dd-MM-yyyy HH:mm:ss) WARN  [io.gi.Jo.re.PedidoResource] (Test runner thread)Não foi possível cancelar o pedido ID 1 para user@example.com: Não pode cancelar.
2025-06-16 05:02:38,634(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Operador adm@example.com atualizando situação do pedido ID 99 para a situação de ID 2.
2025-06-16 05:02:38,646(dd-MM-yyyy HH:mm:ss) WARN  [io.gi.Jo.re.PedidoResource] (Test runner thread)Pedido ID 99 não encontrado para atualização de situação.
2025-06-16 05:02:38,770(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Operador adm@example.com buscando todos os pedidos.
2025-06-16 05:02:38,898(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Serviço ou operador adm@example.com confirmando pagamento PIX para o pedido ID 1.
2025-06-16 05:02:38,932(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Operador employe@example.com buscando pedido por ID 1.
2025-06-16 05:02:38,989(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Serviço ou operador adm@example.com confirmando pagamento de boleto para o pedido ID 1.
2025-06-16 05:02:39,039(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Operador adm@example.com atualizando situação do pedido ID 1 para a situação de ID 2.
2025-06-16 05:02:39,078(dd-MM-yyyy HH:mm:ss) WARN  [io.gi.Jo.re.PedidoResource] (Test runner thread)Token JWT não possui o claim 'upn', 'preferred_username' ou 'email'.
2025-06-16 05:02:39,477(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Usuário user@example.com solicitou a exclusão do telefone com ID 1.
2025-06-16 05:02:39,503(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Usuário user@example.com solicitou a criação de um novo telefone.
2025-06-16 05:02:39,504(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Telefone com ID 2 criado com sucesso para o usuário: user@example.com
2025-06-16 05:02:39,580(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Usuário user@example.com solicitou a atualização do telefone com ID 1.
2025-06-16 05:02:39,636(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Buscando telefone com ID 1 para o usuário: user@example.com
2025-06-16 05:02:39,696(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Buscando todos os telefones para o usuário: user@example.com
2025-06-16 05:02:40,056(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Execução do método deletarUsuario para o id: 1
2025-06-16 05:02:40,058(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Usuário deletado com sucesso.
2025-06-16 05:02:40,492(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Execução do método findAll
2025-06-16 05:02:40,494(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Foram encontrados 1 usuários.
2025-06-16 05:02:40,532(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Execução do método findById para o id: 1
2025-06-16 05:02:40,937(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Buscando cartão com ID 1 para o usuário: user@example.com
2025-06-16 05:02:40,952(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Buscando todos os cartões para o usuário: user@example.com
2025-06-16 05:02:41,290(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Usuário user@example.com solicitou a criação de um novo cartão.
2025-06-16 05:02:41,293(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Cartão com ID 1 criado com sucesso para o usuário: user@example.com
2025-06-16 05:02:41,334(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Usuário user@example.com solicitou a exclusão do cartão com ID 1.
2025-06-16 05:02:41,774(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para buscar cidades do estado de id: 1
2025-06-16 05:02:41,816(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para listar todas as cidades.
2025-06-16 05:02:41,843(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para buscar cidade por id: 1
2025-06-16 05:02:41,910(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para criar nova cidade: Palmas
2025-06-16 05:02:41,918(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Cidade criada com sucesso, id: 1
2025-06-16 05:02:41,972(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para deletar cidade de id: 1
2025-06-16 05:02:41,980(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Cidade deletada com sucesso.
2025-06-16 05:02:42,064(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para atualizar cidade de id: 1
2025-06-16 05:02:42,069(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Cidade atualizada com sucesso.
