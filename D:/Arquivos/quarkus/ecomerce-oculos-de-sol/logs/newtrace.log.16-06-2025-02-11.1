2025-06-16 02:11:25,641(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[39m==================== TEST REPORT #3[39m ====================
2025-06-16 02:11:25,642(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[91mTest AuthResourceTest#Deve lanÃ§ar WebApplicationException para senha invÃ¡lida failed 
[39m: org.mockito.exceptions.base.MockitoException: 
Cannot mock/spy class java.lang.String
Mockito cannot mock/spy because :
 - Cannot mock wrapper types, String.class or Class.class
	at io.github.JoasFyllipe.resource.AuthResourceTest.setup(AuthResourceTest.java:37)

2025-06-16 02:11:25,642(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[91mTest AuthResourceTest#Deve retornar um token quando o login for bem-sucedido failed 
[39m: org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Misplaced or misused argument matcher detected here:

-> at io.github.JoasFyllipe.ClienteResourceTest$AdminEndpointsTests.testClienteFromFuncionario(ClienteResourceTest.java:231)

You cannot use argument matchers outside of verification or stubbing.
Examples of correct usage of argument matchers:
    when(mock.get(anyInt())).thenReturn(null);
    doThrow(new RuntimeException()).when(mock).someVoidMethod(any());
    verify(mock).someMethod(contains("foo"))

This message may appear after an NullPointerException if the last matcher is returning an object 
like any() but the stubbed method signature expect a primitive argument, in this case,
use primitive alternatives.
    when(mock.get(any())); // bad use, will raise NPE
    when(mock.get(anyInt())); // correct usage use

Also, this error might show up because you use argument matchers with methods that cannot be mocked.
Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode().
Mocking methods declared on non-public parent classes is not supported.

	at io.github.JoasFyllipe.resource.AuthResourceTest.setup(AuthResourceTest.java:37)

2025-06-16 02:11:25,644(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[91mTest AuthResourceTest#Deve lanÃ§ar WebApplicationException para usuÃ¡rio invÃ¡lido failed 
[39m: org.mockito.exceptions.base.MockitoException: 
Cannot mock/spy class java.lang.String
Mockito cannot mock/spy because :
 - Cannot mock wrapper types, String.class or Class.class
	at io.github.JoasFyllipe.resource.AuthResourceTest.setup(AuthResourceTest.java:37)

2025-06-16 02:11:25,644(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[91mTest AdminEndpointsTests#POST /from-funcionario/{email} - Deve criar um cliente a partir de um funcionÃ¡rio failed 
[39m: java.lang.NoSuchMethodError: 'io.github.JoasFyllipe.model.usuario.Cliente io.github.JoasFyllipe.service.usuario.ClienteService.clienteFromFuncionario(java.lang.String)'
	at io.github.JoasFyllipe.ClienteResourceTest$AdminEndpointsTests.testClienteFromFuncionario(ClienteResourceTest.java:231)

2025-06-16 02:11:25,647(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[39m>>>>>>>>>>>>>>>>>>>> [91mSummary:[39m <<<<<<<<<<<<<<<<<<<<
io.github.JoasFyllipe.resource.AuthResourceTest#setup(AuthResourceTest.java:37) [91mAuthResourceTest#Deve lanÃ§ar WebApplicationException para senha invÃ¡lida[39m 
Cannot mock/spy class java.lang.String
Mockito cannot mock/spy because :
 - Cannot mock wrapper types, String.class or Class.class
io.github.JoasFyllipe.resource.AuthResourceTest#setup(AuthResourceTest.java:37) [91mAuthResourceTest#Deve retornar um token quando o login for bem-sucedido[39m 
Misplaced or misused argument matcher detected here:

-> at io.github.JoasFyllipe.ClienteResourceTest$AdminEndpointsTests.testClienteFromFuncionario(ClienteResourceTest.java:231)

You cannot use argument matchers outside of verification or stubbing.
Examples of correct usage of argument matchers:
    when(mock.get(anyInt())).thenReturn(null);
    doThrow(new RuntimeException()).when(mock).someVoidMethod(any());
    verify(mock).someMethod(contains("foo"))

This message may appear after an NullPointerException if the last matcher is returning an object 
like any() but the stubbed method signature expect a primitive argument, in this case,
use primitive alternatives.
    when(mock.get(any())); // bad use, will raise NPE
    when(mock.get(anyInt())); // correct usage use

Also, this error might show up because you use argument matchers with methods that cannot be mocked.
Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode().
Mocking methods declared on non-public parent classes is not supported.
io.github.JoasFyllipe.resource.AuthResourceTest#setup(AuthResourceTest.java:37) [91mAuthResourceTest#Deve lanÃ§ar WebApplicationException para usuÃ¡rio invÃ¡lido[39m 
Cannot mock/spy class java.lang.String
Mockito cannot mock/spy because :
 - Cannot mock wrapper types, String.class or Class.class
io.github.JoasFyllipe.ClienteResourceTest$AdminEndpointsTests#testClienteFromFuncionario(ClienteResourceTest.java:231) [91mAdminEndpointsTests#POST /from-funcionario/{email} - Deve criar um cliente a partir de um funcionÃ¡rio[39m 'io.github.JoasFyllipe.model.usuario.Cliente io.github.JoasFyllipe.service.usuario.ClienteService.clienteFromFuncionario(java.lang.String)'
2025-06-16 02:11:25,649(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[39m>>>>>>>>>>>>>>>>>>>> [91m4 TESTS FAILED[39m <<<<<<<<<<<<<<<<<<<<
