2025-06-16 02:04:02,999(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando a própria lista de telefones.
2025-06-16 02:04:03,607(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando o próprio e-mail.
2025-06-16 02:04:04,128(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com buscando suas próprias informações de cliente.
2025-06-16 02:04:04,288(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando a própria lista de endereços.
2025-06-16 02:04:04,698(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando o próprio CPF.
2025-06-16 02:04:05,037(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando a própria data de nascimento.
2025-06-16 02:04:05,350(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando a própria senha.
2025-06-16 02:04:05,701(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando o telefone específico de ID 1.
2025-06-16 02:04:05,940(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando o próprio nome.
2025-06-16 02:04:06,040(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin executando findAll de clientes.
2025-06-16 02:04:06,079(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin buscando cliente por nome: Test
2025-06-16 02:04:06,121(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin buscando cliente por ID: 1
2025-06-16 02:04:06,829(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin gerando cliente a partir do funcionário com e-mail: funcionario@email.com
2025-06-16 02:04:06,883(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin deletando cliente com ID: 1
2025-06-16 02:04:07,089(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Recebida nova solicitação de cadastro de cliente.
2025-06-16 02:04:07,690(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Usuário user@example.com solicitou a atualização do endereço com ID 1.
2025-06-16 02:04:07,980(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Buscando todos os endereços para o usuário: user@example.com
2025-06-16 02:04:08,002(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Buscando endereço com ID 1 para o usuário: user@example.com
2025-06-16 02:04:08,020(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Usuário user@example.com solicitou a exclusão do endereço com ID 1.
2025-06-16 02:04:08,067(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Usuário user@example.com solicitou a criação de um novo endereço.
2025-06-16 02:04:08,068(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Endereço com ID 1 criado com sucesso para o usuário: user@example.com
2025-06-16 02:04:08,626(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para listar todos os estados.
2025-06-16 02:04:08,639(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para buscar estado por sigla: TO
2025-06-16 02:04:08,651(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para criar novo estado: Tocantins
2025-06-16 02:04:08,660(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Estado criado com sucesso, id: 0
2025-06-16 02:04:08,669(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para deletar estado de id: 1
2025-06-16 02:04:08,671(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Estado deletado com sucesso.
2025-06-16 02:04:08,682(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para atualizar estado de id: 1
2025-06-16 02:04:08,684(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Estado atualizado com sucesso.
2025-06-16 02:04:09,227(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin employee@example.com atualizando o próprio salário.
2025-06-16 02:04:09,249(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando o próprio CPF.
2025-06-16 02:04:09,289(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando o próprio e-mail.
2025-06-16 02:04:09,328(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando a própria senha.
2025-06-16 02:04:09,349(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando a própria lista de endereços.
2025-06-16 02:04:09,385(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando o próprio nome.
2025-06-16 02:04:09,424(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando o telefone específico de ID 1.
2025-06-16 02:04:09,455(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando a própria data de nascimento.
2025-06-16 02:04:09,475(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando a própria lista de telefones.
2025-06-16 02:04:10,023(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin criando novo funcionário.
2025-06-16 02:04:10,041(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin deletando funcionário com ID: 1
2025-06-16 02:04:10,057(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin buscando funcionários por cargo: Vendedor
2025-06-16 02:04:10,077(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin buscando funcionário por e-mail: teste@email.com
2025-06-16 02:04:10,105(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin buscando funcionário por ID: 1
2025-06-16 02:04:10,119(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin acessando lista de todos os funcionários.
2025-06-16 02:04:10,336(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin atualizando funcionário com ID: 1
2025-06-16 02:04:10,363(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin buscando funcionário por nome: Teste
2025-06-16 02:04:10,875(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando cor do óculos com ID: 1
2025-06-16 02:04:11,086(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando preço do óculos com ID: 1
2025-06-16 02:04:11,296(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando estoque do óculos com ID: 1
2025-06-16 02:04:11,519(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando nome do óculos com ID: 1
2025-06-16 02:04:11,813(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando modelo do óculos com ID: 1
2025-06-16 02:04:12,396(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Criando novo óculos: null
2025-06-16 02:04:12,416(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Deletando óculos com ID: 1
2025-06-16 02:04:12,454(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando óculos com ID: 1
2025-06-16 02:04:12,488(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Buscando todos os óculos.
2025-06-16 02:04:12,503(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Buscando óculos por ID: 1
2025-06-16 02:04:12,521(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Realizando busca de óculos por filtro.
2025-06-16 02:04:12,525(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Realizando busca de óculos por filtro.
2025-06-16 02:04:13,064(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com buscando sua compra de ID 1.
2025-06-16 02:04:13,084(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com buscando seu histórico de compras.
2025-06-16 02:04:13,110(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com criando novo pedido.
2025-06-16 02:04:13,322(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Operador user@example.com atualizando situação do pedido ID 1 para a situação de ID 0
2025-06-16 02:04:13,624(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Usuário user@example.com solicitou a exclusão do telefone com ID 1.
2025-06-16 02:04:13,648(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Usuário user@example.com solicitou a criação de um novo telefone.
2025-06-16 02:04:13,650(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Telefone com ID 2 criado com sucesso para o usuário: user@example.com
2025-06-16 02:04:13,686(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Usuário user@example.com solicitou a atualização do telefone com ID 1.
2025-06-16 02:04:13,718(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Buscando telefone com ID 1 para o usuário: user@example.com
2025-06-16 02:04:13,736(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Buscando todos os telefones para o usuário: user@example.com
2025-06-16 02:04:14,045(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Execução do método deletarUsuario para o id: 1
2025-06-16 02:04:14,046(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Usuário deletado com sucesso.
2025-06-16 02:04:14,283(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Execução do método findAll
2025-06-16 02:04:14,285(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Foram encontrados 1 usuários.
2025-06-16 02:04:14,305(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Execução do método findById para o id: 1
2025-06-16 02:04:16,074(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Buscando cartão com ID 1 para o usuário: user@example.com
2025-06-16 02:04:16,134(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Buscando todos os cartões para o usuário: user@example.com
2025-06-16 02:04:16,762(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Usuário user@example.com solicitou a criação de um novo cartão.
2025-06-16 02:04:16,770(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Cartão com ID 1 criado com sucesso para o usuário: user@example.com
2025-06-16 02:04:16,866(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Usuário user@example.com solicitou a exclusão do cartão com ID 1.
2025-06-16 02:04:17,204(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para buscar cidades do estado de id: 1
2025-06-16 02:04:17,214(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para listar todas as cidades.
2025-06-16 02:04:17,224(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para buscar cidade por id: 1
2025-06-16 02:04:17,236(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para criar nova cidade: Palmas
2025-06-16 02:04:17,237(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Cidade criada com sucesso, id: 1
2025-06-16 02:04:17,247(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para deletar cidade de id: 1
2025-06-16 02:04:17,248(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Cidade deletada com sucesso.
2025-06-16 02:04:17,258(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para atualizar cidade de id: 1
2025-06-16 02:04:17,259(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Cidade atualizada com sucesso.
2025-06-16 02:04:17,449(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[39m==================== TEST REPORT #1[39m ====================
2025-06-16 02:04:17,450(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[91mTest AuthResourceTest#Deve lançar WebApplicationException para senha inválida failed 
[39m: org.mockito.exceptions.base.MockitoException: 
Cannot mock/spy class java.lang.String
Mockito cannot mock/spy because :
 - Cannot mock wrapper types, String.class or Class.class
	at io.github.JoasFyllipe.resource.AuthResourceTest.setup(AuthResourceTest.java:37)

2025-06-16 02:04:17,451(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[91mTest AuthResourceTest#Deve retornar um token quando o login for bem-sucedido failed 
[39m: org.mockito.exceptions.base.MockitoException: 
Cannot mock/spy class java.lang.String
Mockito cannot mock/spy because :
 - Cannot mock wrapper types, String.class or Class.class
	at io.github.JoasFyllipe.resource.AuthResourceTest.setup(AuthResourceTest.java:37)

2025-06-16 02:04:17,452(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[91mTest AuthResourceTest#Deve lançar WebApplicationException para usuário inválido failed 
[39m: org.mockito.exceptions.base.MockitoException: 
Cannot mock/spy class java.lang.String
Mockito cannot mock/spy because :
 - Cannot mock wrapper types, String.class or Class.class
	at io.github.JoasFyllipe.resource.AuthResourceTest.setup(AuthResourceTest.java:37)

2025-06-16 02:04:17,453(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[91mTest AdminEndpointsTests#POST /from-funcionario/{email} - Deve criar um cliente a partir de um funcionário failed 
[39m: java.lang.ClassCastException: class io.github.JoasFyllipe.model.usuario.Cliente cannot be cast to class io.github.JoasFyllipe.dto.cliente.ClienteResponseDTO (io.github.JoasFyllipe.model.usuario.Cliente and io.github.JoasFyllipe.dto.cliente.ClienteResponseDTO are in unnamed module of loader io.quarkus.bootstrap.classloading.QuarkusClassLoader @3c1abfb4)
	at io.github.JoasFyllipe.ClienteResourceTest$AdminEndpointsTests.testClienteFromFuncionario(ClienteResourceTest.java:245)

2025-06-16 02:04:17,467(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[39m>>>>>>>>>>>>>>>>>>>> [91mSummary:[39m <<<<<<<<<<<<<<<<<<<<
io.github.JoasFyllipe.resource.AuthResourceTest#setup(AuthResourceTest.java:37) [91mAuthResourceTest#Deve lançar WebApplicationException para senha inválida[39m 
Cannot mock/spy class java.lang.String
Mockito cannot mock/spy because :
 - Cannot mock wrapper types, String.class or Class.class
io.github.JoasFyllipe.resource.AuthResourceTest#setup(AuthResourceTest.java:37) [91mAuthResourceTest#Deve retornar um token quando o login for bem-sucedido[39m 
Cannot mock/spy class java.lang.String
Mockito cannot mock/spy because :
 - Cannot mock wrapper types, String.class or Class.class
io.github.JoasFyllipe.resource.AuthResourceTest#setup(AuthResourceTest.java:37) [91mAuthResourceTest#Deve lançar WebApplicationException para usuário inválido[39m 
Cannot mock/spy class java.lang.String
Mockito cannot mock/spy because :
 - Cannot mock wrapper types, String.class or Class.class
io.github.JoasFyllipe.ClienteResourceTest$AdminEndpointsTests#testClienteFromFuncionario(ClienteResourceTest.java:245) [91mAdminEndpointsTests#POST /from-funcionario/{email} - Deve criar um cliente a partir de um funcionário[39m class io.github.JoasFyllipe.model.usuario.Cliente cannot be cast to class io.github.JoasFyllipe.dto.cliente.ClienteResponseDTO (io.github.JoasFyllipe.model.usuario.Cliente and io.github.JoasFyllipe.dto.cliente.ClienteResponseDTO are in unnamed module of loader io.quarkus.bootstrap.classloading.QuarkusClassLoader @3c1abfb4)
2025-06-16 02:04:17,530(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[39m>>>>>>>>>>>>>>>>>>>> [91m4 TESTS FAILED[39m <<<<<<<<<<<<<<<<<<<<
