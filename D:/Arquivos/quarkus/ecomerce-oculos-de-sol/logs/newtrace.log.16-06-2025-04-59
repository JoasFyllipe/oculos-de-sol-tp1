2025-06-16 04:59:08,281(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando a própria lista de telefones.
2025-06-16 04:59:08,863(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando o próprio e-mail.
2025-06-16 04:59:09,309(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com buscando suas próprias informações de cliente.
2025-06-16 04:59:09,380(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando a própria lista de endereços.
2025-06-16 04:59:09,680(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando o próprio CPF.
2025-06-16 04:59:10,012(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando a própria data de nascimento.
2025-06-16 04:59:10,387(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando a própria senha.
2025-06-16 04:59:10,896(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando o telefone específico de ID 1.
2025-06-16 04:59:11,447(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Usuário cliente@example.com atualizando o próprio nome.
2025-06-16 04:59:11,536(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin executando findAll de clientes.
2025-06-16 04:59:11,580(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin buscando cliente por nome: Test
2025-06-16 04:59:11,634(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin buscando cliente por ID: 1
2025-06-16 04:59:11,693(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin gerando cliente a partir do funcionário com e-mail: funcionario@email.com
2025-06-16 04:59:11,729(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Admin deletando cliente com ID: 1
2025-06-16 04:59:12,227(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.ClienteResource] (Test runner thread)Recebida nova solicitação de cadastro de cliente.
2025-06-16 04:59:12,998(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Usuário user@example.com solicitou a atualização do endereço com ID 1.
2025-06-16 04:59:13,398(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Buscando todos os endereços para o usuário: user@example.com
2025-06-16 04:59:13,462(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Buscando endereço com ID 1 para o usuário: user@example.com
2025-06-16 04:59:13,497(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Usuário user@example.com solicitou a exclusão do endereço com ID 1.
2025-06-16 04:59:13,517(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Usuário user@example.com solicitou a criação de um novo endereço.
2025-06-16 04:59:13,519(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EnderecoResource] (Test runner thread)Endereço com ID 1 criado com sucesso para o usuário: user@example.com
2025-06-16 04:59:14,361(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para listar todos os estados.
2025-06-16 04:59:14,427(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para buscar estado por sigla: TO
2025-06-16 04:59:14,489(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para criar novo estado: Tocantins
2025-06-16 04:59:14,551(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Estado criado com sucesso, id: 0
2025-06-16 04:59:14,602(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para deletar estado de id: 1
2025-06-16 04:59:14,604(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Estado deletado com sucesso.
2025-06-16 04:59:14,618(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Requisição para atualizar estado de id: 1
2025-06-16 04:59:14,628(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.EstadoResource] (Test runner thread)Estado atualizado com sucesso.
2025-06-16 04:59:15,603(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin employee@example.com atualizando o próprio salário.
2025-06-16 04:59:15,637(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando o próprio CPF.
2025-06-16 04:59:15,668(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando o próprio e-mail.
2025-06-16 04:59:15,686(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando a própria senha.
2025-06-16 04:59:15,705(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando a própria lista de endereços.
2025-06-16 04:59:15,727(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando o próprio nome.
2025-06-16 04:59:15,745(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando o telefone específico de ID 1.
2025-06-16 04:59:15,785(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando a própria data de nascimento.
2025-06-16 04:59:15,803(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Usuário employee@example.com atualizando a própria lista de telefones.
2025-06-16 04:59:16,566(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin criando novo funcionário.
2025-06-16 04:59:16,656(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin deletando funcionário com ID: 1
2025-06-16 04:59:16,684(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin buscando funcionários por cargo: Vendedor
2025-06-16 04:59:16,705(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin buscando funcionário por e-mail: teste@email.com
2025-06-16 04:59:16,725(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin buscando funcionário por ID: 1
2025-06-16 04:59:16,748(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin acessando lista de todos os funcionários.
2025-06-16 04:59:17,438(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin atualizando funcionário com ID: 1
2025-06-16 04:59:17,544(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.FuncionarioResource] (Test runner thread)Admin buscando funcionário por nome: Teste
2025-06-16 04:59:18,507(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando cor do óculos com ID: 1
2025-06-16 04:59:18,929(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando preço do óculos com ID: 1
2025-06-16 04:59:19,158(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando estoque do óculos com ID: 1
2025-06-16 04:59:19,654(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando nome do óculos com ID: 1
2025-06-16 04:59:19,961(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando modelo do óculos com ID: 1
2025-06-16 04:59:20,497(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Criando novo óculos: null
2025-06-16 04:59:20,558(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Deletando óculos com ID: 1
2025-06-16 04:59:20,607(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Atualizando óculos com ID: 1
2025-06-16 04:59:20,646(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Buscando todos os óculos.
2025-06-16 04:59:20,669(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Buscando óculos por ID: 1
2025-06-16 04:59:20,717(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Realizando busca de óculos por filtro.
2025-06-16 04:59:20,727(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.OculosResource] (Test runner thread)Realizando busca de óculos por filtro.
2025-06-16 04:59:25,894(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com criando novo pedido.
2025-06-16 04:59:25,898(dd-MM-yyyy HH:mm:ss) WARN  [io.gi.Jo.re.PedidoResource] (Test runner thread)Erro de validação ao criar pedido para user@example.com: Dados inválidos.
2025-06-16 04:59:25,973(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com criando novo pedido.
2025-06-16 04:59:26,055(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com criando novo pedido.
2025-06-16 04:59:26,061(dd-MM-yyyy HH:mm:ss) ERROR [io.gi.Jo.re.PedidoResource] (Test runner thread)Erro inesperado ao criar pedido para user@example.com.: java.lang.RuntimeException: Erro interno.
	at io.github.JoasFyllipe.resource.PedidoResource.create(PedidoResource.java:55)
	at io.github.JoasFyllipe.PedidoResourceTest$CreatePedidoTests.testCreatePedidoUnexpectedError(PedidoResourceTest.java:166)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)
	at io.quarkus.deployment.dev.testing.JunitTestRunner$2.run(JunitTestRunner.java:227)
	at io.quarkus.deployment.dev.testing.ModuleTestRunner$2.run(ModuleTestRunner.java:89)
	at io.quarkus.deployment.dev.testing.TestSupport.runInternal(TestSupport.java:466)
	at io.quarkus.deployment.dev.testing.TestSupport$3.run(TestSupport.java:386)
	at java.base/java.lang.Thread.run(Thread.java:1583)

2025-06-16 04:59:26,112(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com criando novo pedido.
2025-06-16 04:59:26,114(dd-MM-yyyy HH:mm:ss) WARN  [io.gi.Jo.re.PedidoResource] (Test runner thread)Erro ao criar pedido para user@example.com: Cliente não encontrado.
2025-06-16 04:59:26,188(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com solicitando cancelamento do pedido ID 1.
2025-06-16 04:59:26,245(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com buscando sua compra de ID 99.
2025-06-16 04:59:26,250(dd-MM-yyyy HH:mm:ss) WARN  [io.gi.Jo.re.PedidoResource] (Test runner thread)Compra de ID 99 não encontrada para o usuário user@example.com.
2025-06-16 04:59:26,277(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com buscando sua compra de ID 1.
2025-06-16 04:59:26,304(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com gerando boleto para o pedido ID 1.
2025-06-16 04:59:26,395(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com buscando seu histórico de compras.
2025-06-16 04:59:26,436(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com gerando código PIX para o pedido ID 1.
2025-06-16 04:59:26,497(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Usuário user@example.com solicitando cancelamento do pedido ID 1.
2025-06-16 04:59:26,509(dd-MM-yyyy HH:mm:ss) WARN  [io.gi.Jo.re.PedidoResource] (Test runner thread)Não foi possível cancelar o pedido ID 1 para user@example.com: Não pode cancelar.
2025-06-16 04:59:26,591(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Operador adm@example.com atualizando situação do pedido ID 99 para a situação de ID 2.
2025-06-16 04:59:26,596(dd-MM-yyyy HH:mm:ss) WARN  [io.gi.Jo.re.PedidoResource] (Test runner thread)Pedido ID 99 não encontrado para atualização de situação.
2025-06-16 04:59:26,658(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Operador adm@example.com buscando todos os pedidos.
2025-06-16 04:59:26,732(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Serviço ou operador adm@example.com confirmando pagamento PIX para o pedido ID 1.
2025-06-16 04:59:26,768(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Operador employe@example.com buscando pedido por ID 1.
2025-06-16 04:59:26,874(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Serviço ou operador adm@example.com confirmando pagamento de boleto para o pedido ID 1.
2025-06-16 04:59:26,929(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.PedidoResource] (Test runner thread)Operador adm@example.com atualizando situação do pedido ID 1 para a situação de ID 2.
2025-06-16 04:59:26,976(dd-MM-yyyy HH:mm:ss) WARN  [io.gi.Jo.re.PedidoResource] (Test runner thread)Token JWT não possui o claim 'upn', 'preferred_username' ou 'email'.
2025-06-16 04:59:27,392(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Usuário user@example.com solicitou a exclusão do telefone com ID 1.
2025-06-16 04:59:27,409(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Usuário user@example.com solicitou a criação de um novo telefone.
2025-06-16 04:59:27,410(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Telefone com ID 2 criado com sucesso para o usuário: user@example.com
2025-06-16 04:59:27,434(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Usuário user@example.com solicitou a atualização do telefone com ID 1.
2025-06-16 04:59:27,458(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Buscando telefone com ID 1 para o usuário: user@example.com
2025-06-16 04:59:27,479(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.TelefoneResource] (Test runner thread)Buscando todos os telefones para o usuário: user@example.com
2025-06-16 04:59:27,888(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Execução do método deletarUsuario para o id: 1
2025-06-16 04:59:27,890(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Usuário deletado com sucesso.
2025-06-16 04:59:28,300(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Execução do método findAll
2025-06-16 04:59:28,309(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Foram encontrados 1 usuários.
2025-06-16 04:59:28,363(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.UsuarioResource] (Test runner thread)Execução do método findById para o id: 1
2025-06-16 04:59:28,883(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Buscando cartão com ID 1 para o usuário: user@example.com
2025-06-16 04:59:28,901(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Buscando todos os cartões para o usuário: user@example.com
2025-06-16 04:59:29,130(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Usuário user@example.com solicitou a criação de um novo cartão.
2025-06-16 04:59:29,132(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Cartão com ID 1 criado com sucesso para o usuário: user@example.com
2025-06-16 04:59:29,155(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CartaoResource] (Test runner thread)Usuário user@example.com solicitou a exclusão do cartão com ID 1.
2025-06-16 04:59:29,529(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para buscar cidades do estado de id: 1
2025-06-16 04:59:29,555(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para listar todas as cidades.
2025-06-16 04:59:29,582(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para buscar cidade por id: 1
2025-06-16 04:59:29,621(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para criar nova cidade: Palmas
2025-06-16 04:59:29,623(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Cidade criada com sucesso, id: 1
2025-06-16 04:59:29,647(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para deletar cidade de id: 1
2025-06-16 04:59:29,649(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Cidade deletada com sucesso.
2025-06-16 04:59:29,676(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Requisição para atualizar cidade de id: 1
2025-06-16 04:59:29,677(dd-MM-yyyy HH:mm:ss) INFO  [io.gi.Jo.re.CidadeResource] (Test runner thread)Cidade atualizada com sucesso.
2025-06-16 04:59:30,286(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[39m==================== TEST REPORT #1[39m ====================
2025-06-16 04:59:30,288(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[91mTest JwtErrorTests#Deve lançar WebApplicationException se JWT não tiver claim de email failed 
[39m: org.opentest4j.AssertionFailedError: expected: <Token inválido ou sem as informações de e-mail do usuário.> but was: <null>
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)
	at io.github.JoasFyllipe.PedidoResourceTest$JwtErrorTests.testGetUsuarioEmailThrowsException(PedidoResourceTest.java:397)

2025-06-16 04:59:30,323(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[39m>>>>>>>>>>>>>>>>>>>> [91mSummary:[39m <<<<<<<<<<<<<<<<<<<<
io.github.JoasFyllipe.PedidoResourceTest$JwtErrorTests#testGetUsuarioEmailThrowsException(PedidoResourceTest.java:397) [91mJwtErrorTests#Deve lançar WebApplicationException se JWT não tiver claim de email[39m expected: <Token inválido ou sem as informações de e-mail do usuário.> but was: <null>
2025-06-16 04:59:30,334(dd-MM-yyyy HH:mm:ss) ERROR [io.qu.test] (Test runner thread)[39m>>>>>>>>>>>>>>>>>>>> [91m1 TEST FAILED[39m <<<<<<<<<<<<<<<<<<<<
